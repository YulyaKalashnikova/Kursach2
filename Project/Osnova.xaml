<Window x:Class="Project.Osnova"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project"
        mc:Ignorable="d"
        Title="" Height="520" Width="900"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="7"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridКРУгг" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}" >
                        <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyleTEXTBOX" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}" >
                        <Border x:Name="border" CornerRadius="2"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="7" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" CornerRadius="7" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" CornerRadius="7" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" CornerRadius="7" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" CornerRadius="7" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl HorizontalAlignment="Center" Width="900" BorderBrush="#FF498EAF">
            <TabItem Header="Инвентарный лист" Margin="4,-2,-5,1" BorderBrush="#FFACACAC" Foreground="Black">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FFF0F0F0"/>
                        <GradientStop Color="#FFE5E5E5" Offset="1"/>
                    </LinearGradientBrush>
                </TabItem.Background>

                <Grid Background="White" Margin="0,0,-1,0">
                    <Canvas x:Name="Report">
                        <DataGrid Name="tableListOfThing" AutoGenerateColumns="False" Width="844" Height="307" Margin="23,67,26,0" BorderBrush="#FF498EAF" Foreground="Black" OpacityMask="White" Style="{DynamicResource DataGridКРУгг}" Background="#FFF6F6F6">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Date, StringFormat=\{0:dd.MM.yyyy\}}" Header="Дата" Width="2.2*"/>
                                <DataGridTextColumn Binding="{Binding Thing.ThingTitle}" Header="Оборудование" Width="4*"/>
                                <DataGridTextColumn Binding="{Binding Thing.InventoryNumber}" Header="Номер" Width="1.7*"/>
                                <DataGridTextColumn Binding="{Binding Condition.ConditionTitle}" Header="Состояние" Width="2.5*"/>
                                <DataGridTextColumn Binding="{Binding Price}" Header="Цена, руб" Width="2.5*"/>
                                <DataGridTextColumn Binding="{Binding Count}" Header="Кол-во" Width="1.5*"/>
                                <DataGridTextColumn Binding="{Binding Unit.UnitTitle}" Header="Ед. изм" Width="1.5*"/>
                                <DataGridTextColumn Binding="{Binding Sum}" Header="Сумма, руб" Width="2.5*"/>
                                <DataGridTextColumn Binding="{Binding User.FullName}" Header="Работник" Width="4*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Label Content="Итог:" Height="25" Width="40" Canvas.Left="377" Canvas.Top="374" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Label.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"/>
                                    <GradientStop Color="Black" Offset="1"/>
                                </LinearGradientBrush>
                            </Label.BorderBrush>
                        </Label>
                        <Label Content="" x:Name="itogPrice" Height="25" Width="75" Background="White" Canvas.Left="424" Canvas.Top="374" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Label.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"/>
                                    <GradientStop Color="Black" Offset="1"/>
                                </LinearGradientBrush>
                            </Label.BorderBrush>
                        </Label>
                        <Label x:Name="itogCount" Height="25" Width="50" Canvas.Left="515" Canvas.Top="374" BorderBrush="Black" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <Label x:Name="itogSum" Height="25" Width="80" Canvas.Left="631" Canvas.Top="374" BorderBrush="Black" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Canvas>
                    <Image HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="25" Source="/Pictures/ПОИСК.png" RenderTransformOrigin="0.517,0.327" Margin="800,23,0,0"/>
                    <Button Style="{DynamicResource ButtonStyleButton}" Content="Добавить" HorizontalAlignment="Left" Height="27" Margin="23,403,0,0" VerticalAlignment="Top" Width="110" Background="#FF03A828" BorderBrush="#FF03A828" Foreground="White" Click="ListOfThingAdd_Click"/>
                    <Button Content="Изменить" HorizontalAlignment="Left" Height="27" Margin="150,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Foreground="White" BorderBrush="#FF0540F2" Background="#FF0540F2" Click="ListOfThingEdit_Click"/>
                    <Button x:Name="RemoveListOfThing" Content="Удалить" HorizontalAlignment="Left" Height="27" Margin="759,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Background="Red" BorderBrush="Red" Foreground="White" Click="ListOfThingRemove_Click"/>
                    <Button Click="ReportAccountingExcel_Click" Content="" HorizontalAlignment="Left" Height="40" Margin="830,14,0,0" VerticalAlignment="Top" Width="39" BorderBrush="White">
                        <Button.Background>
                            <ImageBrush ImageSource="/Pictures/microsoft_excel.png"/>
                        </Button.Background>
                    </Button>
                    <TextBox TextChanged="TextBox_TextChangedListOfThing" x:Name="TbSearchListOfThing" HorizontalAlignment="Left" Height="25" Margin="376,23,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="424" Style="{DynamicResource TextBoxStyleTEXTBOX}" BorderBrush="#FF498EAF"/>
                    <DatePicker SelectedDateChanged="DatePickerListOfThing_DateChanged" Name="DatePickerFilter1" HorizontalAlignment="Left" Height="24" Margin="114,23,0,0" VerticalAlignment="Top" Width="112"/>
                    <DatePicker SelectedDateChanged="DatePickerListOfThing_DateChanged" x:Name="DatePickerFilter2" HorizontalAlignment="Left" Height="25" Margin="259,23,0,0" VerticalAlignment="Top" Width="112"/>
                    <Label Content="Label" HorizontalAlignment="Left" Height="1" Margin="28,21,0,0" VerticalAlignment="Top" Width="1"/>
                    <TextBlock HorizontalAlignment="Left" Height="24" Margin="22,27,0,0" TextWrapping="Wrap" Text="Фильтровать с" VerticalAlignment="Top" Width="89"/>
                    <TextBlock HorizontalAlignment="Left" Height="25" Margin="233,27,0,0" TextWrapping="Wrap" Text="по" VerticalAlignment="Top" Width="26"/>
                    <Button Content="Списать" HorizontalAlignment="Left" Height="27" Margin="280,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Foreground="White" BorderBrush="#FF0540F2" Background="#FF0540F2" Click="WriteOff_Click"/>
                    <Button Content="Посчитать" HorizontalAlignment="Left" Height="27" Margin="410,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Foreground="White" BorderBrush="#FF0540F2" Background="#FF0540F2" Click="Itog_Click"/>
                </Grid>
            </TabItem>

            <TabItem Header="Списанное" Margin="5,-2,-44,1">
                <Grid Background="White" Margin="0,0,0.4,-0.4">
                    <DataGrid Name="tableDecommissioned" AutoGenerateColumns="False" Height="425" Margin="23,24,26,0" VerticalAlignment="Top" Style="{DynamicResource DataGridКРУгг}" Background="#FFF6F6F6" BorderBrush="#FF498EAF">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Date, StringFormat=\{0:dd.MM.yyyy\}}" Header="Дата" Width="2.2*"/>
                            <DataGridTextColumn Binding="{Binding Thing.ThingTitle}" Header="Оборудование" Width="4*"/>
                            <DataGridTextColumn Binding="{Binding Thing.InventoryNumber}" Header="Номер" Width="1.7*"/>
                            <DataGridTextColumn Binding="{Binding WriteOff.WriteOffTitle}" Header="Списано" Width="3.2*"/>
                            <DataGridTextColumn Binding="{Binding Condition.ConditionTitle}" Header="Состояние" Width="2.5*"/>
                            <DataGridTextColumn Binding="{Binding Price}" Header="Цена, руб" Width="2.5*"/>
                            <DataGridTextColumn Binding="{Binding Count}" Header="Кол-во" Width="1.5*"/>
                            <DataGridTextColumn Binding="{Binding Unit.UnitTitle}" Header="Ед. изм" Width="1.5*"/>
                            <DataGridTextColumn Binding="{Binding Sum}" Header="Сумма, руб" Width="2.5*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <TabItem Header="Обрудование" Margin="44,-2,-83,1">
                <Grid Background="White" Margin="0,0,0.4,-0.4">
                    <DataGrid Name="tableThing" AutoGenerateColumns="False" Height="307" Margin="23,67,26,0" VerticalAlignment="Top" Style="{DynamicResource DataGridКРУгг}" Background="#FFF6F6F6" BorderBrush="#FF498EAF">
                        <DataGrid.Columns>
                            <DataGridTextColumn  Binding="{Binding ThingTitle}" Header="Название" Width="*"/>
                            <DataGridTextColumn  Binding="{Binding InventoryNumber}" Header="Инвентарный номер" Width="*"/>
                            <DataGridTextColumn  Binding="{Binding TypeOfThing.TypeOfThingTitle}" Header="Тип" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Content="Добавить" HorizontalAlignment="Left" Height="27" Margin="23,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Background="#FF03A828" BorderBrush="#FF03A828" Foreground="White" Click="ThingAdd_Click"/>
                    <Button Content="Изменить" HorizontalAlignment="Left" Height="27" Margin="150,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Background="#FF0540F2" BorderBrush="#FF0540F2" Foreground="White" Click="ThingEdit_Click"/>
                    <Button x:Name="RemoveThing" Content="Удалить" HorizontalAlignment="Left" Height="27" Margin="759,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Background="Red" BorderBrush="Red" Foreground="White" Click="ThingRemove_Click"/>
                    <TextBox HorizontalAlignment="Left" Height="25" Margin="23,23,0,0" TextWrapping="Wrap" Name="TbSearchThing" Text="" TextChanged="TextBox_TextChangedThing" VerticalAlignment="Top" Width="820" Style="{DynamicResource TextBoxStyleTEXTBOX}" BorderBrush="#FF498EAF"/>
                    <Image HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" Source="/Pictures/ПОИСК.png" RenderTransformOrigin="0.517,0.327" Margin="843,23,0,0">
                        <Image.OpacityMask>
                            <ImageBrush ImageSource="/Pictures/ПОИСК.png"/>
                        </Image.OpacityMask>
                    </Image>
                </Grid>
            </TabItem>

            <TabItem Header="Сотрудники" Margin="83,-2,-102,1" x:Name="UserTableItem">
                <Grid Background="White" Margin="0,0,0.4,-0.4">
                    <DataGrid Name="tableUsers" AutoGenerateColumns="False" Height="307" Margin="23,67,26,0" VerticalAlignment="Top" Style="{DynamicResource DataGridКРУгг}" Background="#FFF6F6F6" BorderBrush="#FF498EAF">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding LastName}" Header="Фамилия" Width="4.5*"/>
                            <DataGridTextColumn Binding="{Binding FirstName}" Header="Имя" Width="4.5*"/>
                            <DataGridTextColumn Binding="{Binding MiddleName}" Header="Отчество" Width="4.5*"/>
                            <DataGridTextColumn Binding="{Binding Phone}" Header="Номер телефона" Width="5*" />
                            <DataGridTextColumn Binding="{Binding Role.RoleTitle}" Header="Должность" Width="5*" />
                            <DataGridTextColumn Binding="{Binding Enterprise.EnterpriseTitle}" Header="Компания" Width="4*" />
                            <DataGridTextColumn Binding="{Binding Login}" Header="Логин" Width="4*" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="AddUsers" Content="Добавить" HorizontalAlignment="Left" Height="27" Margin="23,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Background="#FF03A828" BorderBrush="#FF03A828" Foreground="White" Click="UsersAdd_Click"/>
                    <Button x:Name="EditUsers" Content="Изменить" HorizontalAlignment="Left" Height="27" Margin="150,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Foreground="White" BorderBrush="#FF0540F2" Background="#FF0540F2" Click="UsersEdit_Click"/>
                    <Button x:Name="RemoveUsers" Content="Удалить" HorizontalAlignment="Left" Height="27" Margin="759,403,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyleButton}" Background="Red" BorderBrush="Red" Foreground="White" Click="UsersRemove_Click"/>
                    <Image HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" Source="/Pictures/ПОИСК.png" RenderTransformOrigin="0.517,0.327" Margin="816,23,0,0"/>
                    <TextBox x:Name="TbSearchUsers" Text="" TextChanged="TextBox_TextChangedUsers" HorizontalAlignment="Left" Height="25" Margin="298,23,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="518" Style="{DynamicResource TextBoxStyleTEXTBOX}" BorderBrush="#FF498EAF"/>
                    <Button Click="ReportUsersPdf_Click" Content="" HorizontalAlignment="Left" Height="25" Margin="845,23,0,0" VerticalAlignment="Top" Width="23" BorderBrush="White">
                        <Button.Background>
                            <ImageBrush ImageSource="/Pictures/pdf.png"/>
                        </Button.Background>
                    </Button>
                    <ComboBox SelectedIndex="0" DisplayMemberPath="RoleTitle" SelectionChanged="CmbFilterUsers_SelectionChanged" Name="CmdFilterUsers" Style="{DynamicResource ComboBox}" HorizontalAlignment="Left" Height="25" Margin="103,23,0,0" VerticalAlignment="Top" Width="190" BorderBrush="#FF498EAF">
                        <ComboBox.Background>
                            <LinearGradientBrush EndPoint="0,1">
                                <GradientStop Color="#FFF0F0F0"/>
                                <GradientStop Color="#FF498EAF" Offset="1"/>
                            </LinearGradientBrush>
                        </ComboBox.Background>
                    </ComboBox>
                    <TextBlock HorizontalAlignment="Left" Height="25" Margin="23,27,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="75"><Run Language="ru-ru" Text="Фильтровать:"/></TextBlock>
                </Grid>
            </TabItem>

            <TabItem Header="Преприятия" Margin="102,-2,-126,1" IsVisibleChanged="Osnova_IsVisibleChange" x:Name="EntTabItem">
                <Grid Background="White" Margin="0,0,-0.4,0">
                    <DataGrid x:Name="tableEnterprises" AutoGenerateColumns="False" Height="307" Margin="23,67,26,0" VerticalAlignment="Top" Style="{DynamicResource DataGridКРУгг}" Background="#FFF6F6F6" BorderBrush="#FF498EAF">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding EnterpriseTitle}" Header="Название" Width="*" />
                            <DataGridTextColumn Binding="{Binding Address}" Header="Адрес" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="AddEnt" Content="Добавить" HorizontalAlignment="Left" Height="27" Margin="23,403,0,0" VerticalAlignment="Top" Width="110" Click="EnterprisesAdd_Click" Style="{DynamicResource ButtonStyleButton}" Background="#FF03A828" BorderBrush="#FF03A828" Foreground="White"/>
                    <Button x:Name="EditEnt" Content="Изменить" HorizontalAlignment="Left" Height="27" Margin="150,403,0,0" VerticalAlignment="Top" Width="110" Click="EnterprisesEdit_Click" Style="{DynamicResource ButtonStyleButton}" Background="#FF0540F2" BorderBrush="#FF0540F2" Foreground="White"/>
                    <Button x:Name="RemoveEnt" Content="Удалить" HorizontalAlignment="Left" Height="27" Margin="759,403,0,0" VerticalAlignment="Top" Width="110" Click="EnterprisesRemove_Click" Style="{DynamicResource ButtonStyleButton}" Foreground="White" BorderBrush="Red" Background="Red"/>
                    <TextBox Name="TbSearchEnt" Text="" TextChanged="TextBox_TextChangedEnt" HorizontalAlignment="Left" Height="25" Margin="23,23,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="820" Style="{DynamicResource TextBoxStyleTEXTBOX}" BorderBrush="#FF498EAF"/>
                    <Image HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" Source="/Pictures/ПОИСК.png" RenderTransformOrigin="0.517,0.327" Margin="843,23,0,0"/>
                </Grid>
            </TabItem>
            <TabItem Header="Профиль" Margin="373,-2,-397,1">
                <Grid Background="White" Margin="0,0,-0.4,0">
                    <GroupBox BorderBrush="Black" BorderThickness="1" Header="Личный кабинет" FontWeight="Bold" Margin="30,10,30,79">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Left" Margin="212,39,0,16" TextWrapping="Wrap" Text="Фамилия" Width="58" Grid.Column="1" Grid.Row="0"/>
                            <Image Grid.ColumnSpan="1" HorizontalAlignment="Left" Height="126" Margin="35,10,0,0" VerticalAlignment="Top" Width="129"/>
                            <Button Content="Загрузить" HorizontalAlignment="Left" Height="27" Margin="45,14,0,0" VerticalAlignment="Top" Width="110" Click="PictureAdd_Click" Style="{DynamicResource ButtonStyleButton}" Background="#FF0540F2" BorderBrush="#FF0540F2" Foreground="White" Grid.Row="2" Grid.ColumnSpan="1"/>
                            <TextBlock HorizontalAlignment="Left" Margin="212,8,0,37" TextWrapping="Wrap" Text="Имя" Width="58" Grid.Column="1" Grid.Row="1"/>
                            <TextBlock HorizontalAlignment="Left" Margin="212,49,0,69" TextWrapping="Wrap" Text="Отчество" Width="58" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"/>
                            <TextBox Text="{Binding LastName}" Grid.Column="1" HorizontalAlignment="Left" Margin="287,38,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" Style="{DynamicResource TextBoxStyleTEXTBOX}"/>
                            <TextBox Text="{Binding FirstName}" Grid.Column="1" HorizontalAlignment="Left" Margin="287,5,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" Style="{DynamicResource TextBoxStyleTEXTBOX}" Grid.Row="1"/>
                            <TextBox Text="{Binding MiddleName}" Grid.Column="1" HorizontalAlignment="Left" Margin="287,46,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" Style="{DynamicResource TextBoxStyleTEXTBOX}" Grid.Row="1"/>
                            <TextBlock HorizontalAlignment="Left" Margin="42,25,0,24" TextWrapping="Wrap" Text="Телефон" Width="58" Grid.Row="3" Grid.Column="0"/>
                            <TextBlock HorizontalAlignment="Left" Margin="40,32,0,20" TextWrapping="Wrap" Text="Пароль" Width="58" Grid.Row="4" Grid.Column="0"/>
                            <TextBox Text="{Binding Phone}" HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" VerticalAlignment="Center" Width="200" Grid.Row="3" Style="{DynamicResource TextBoxStyleTEXTBOX}" Grid.Column="1"/>
                            <TextBox Text="{Binding Password}" HorizontalAlignment="Left" Margin="5,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="200" Grid.Row="4" Style="{DynamicResource TextBoxStyleTEXTBOX}" Grid.Column="1"/>

                        </Grid>
                    </GroupBox>
                    <Button Content="Сохранить" HorizontalAlignment="Left" Height="27" Margin="30,397,0,0" VerticalAlignment="Top" Width="110" Click="SaveProfile_Click" Style="{DynamicResource ButtonStyleButton}" Background="#FF0540F2" BorderBrush="#FF0540F2" Foreground="White"/>

                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
